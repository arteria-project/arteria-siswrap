A self contained (Tornado) REST service for managing running of external Sisyphus commands
such as the quick report generator and quality control suite. Listens on port
10900 for various commands. Try accessing e.g. http://localhost:10900/api/1.0


TODO Rewrite

NOTES:

# Setup vagrant env
vagrant up

# Prepare environment
vagrant ssh
cd /vagrant
virtualenv venv
source venv/bin/activate
pip install -e .
pip install -r requirements/dev

# Run service
siswrap-ws --configroot config/ --port 10900 --debug

# In separate console, run:
curl -X POST --data '{"runfolder":"160824_M00485_0293_000000000-ALRHK"}' localhost:10900/api/1.0/checkindices/run/160824_M00485_0293_000000000-ALRHK
curl http://localhost:10900/api/1.0/checkindices/status/12850



Manual installation (tested with python > 2.7.6):
    # Install the dependencies and the arteria-siswrap package
    virtualenv /opt/arteria/arteria-siswrap-env
    source /opt/arteria/arteria-siswrap-env/bin/activate
    pip install -r requirements/dev
    python setup.py install

Manual run
    /opt/arteria/arteria-siswrap/bin/siswrap-ws --port 10900 --configroot ./config/ --debug

Manual tests
    py.test tests/integration/rest_tests.py

Setup with bells and whistles (not actively supported anymore)
    # Use the install script for installation of service and controller scripts.
    # Also runs integration tests in the end
    ./scripts/install

    # Manually control the service afterwards with
    /etc/init.d/siswrap-wsd

    # Manually run integration tests afterwards with
    /usr/local/bin/siswrap-ws-test

Testing within a Docker container
    # This requires access to some of our internal base images
    docker build arteria/siswrap .
    docker run -t -i --name siswrap -p 10900:10900 -v `pwd`:/arteria/arteria-lib/siswrap arteria/siswrap /bin/bash
    # Now you can run the setup and test steps above; and easily re-start everything from scratch
    # by exiting the container and doing
    docker rm siswrap
    # followed by the two earlier docker commands again.
